tags := set

# Identity
identity.name = Mitchell Wills
identity.email = mwills@wpi.edu

# Bash
bash.path := list
bash.ldpath := list
bash.completion_file := list
bash.completion_dir := list
bash.completion_file += /usr/share/bash-completion/bash_completion
bash.completion_file += /etc/bash_completion

:bash.programs
	editor = 'emacs -nw'
	pager = less

:bash.prompt
	eval := list
	eval += scm
	:vars
		JOBS = "$(jobs -l | perl -pe 's|(.+)Running\s+|\\[\\e[0;32m\\]\1 |g;' -pe 's|(.+)Stopped\s+|\\[\\e[0;31m\\]\1 |g;' -pe 's|(.+)Killed\s+|\\[\\e[0;35m\\]\1 |g;')"
		:DIR_STACK
			if = "$(dirs | wc -w)" -gt "1"
			then = " %bold_cyan$(dirs | wc -w)"
			else =
		:EXIT_CODE
			if = $EXIT_STATUS == 0
			then =
			else = "%bold_white%background_red!!! Exited: $EXIT_STATUS !!!"
	template = "\n$JOBS\n%yellow\u%normal@\h %blue[\w${DIR_STACK}%blue]$SCM %bold_red\t $EXIT_CODE%normal\n %normal\$ "

# tmux
tmux.prefix = C-o

# source install
src.make_args := set
src.clean_src = false

# apt-get
apt_get.install := set
apt_get.repos := set
apt_get.install += emacs, tmux, git
apt_get.install += yaml-mode, haskell-mode
apt_get.install += lynx, tree, htop
apt_get.install += sl
apt_get.install += build-essential
apt_get.install += zip, unzip
[windowed]
	apt_get.install += gitg


[personal]
	apt_get.install += libavcodec-extra
	apt_get.install += gparted
	apt_get.install += nmap, telnet
	apt_get.install += synaptic, aptitude
	apt_get.install += p7zip-full, p7zip-rar, p7zip, rar
	[windowed]
		apt_get.install += vlc
		apt_get.install += gimp, gimp-data, gimp-plugin-registry, gimp-data-extras
		[system.distributor_id == Ubuntu]
			apt_get.install += ubuntu-wallpapers*
			apt_get.install += unity-tweak-tool, compizconfig-settings-manager
			apt_get.install += ubuntu-restricted-extras

# Nodejs
node.install = false
[personal]
	node.install = true
node.npm.install := set
node.npm.install += bower, grunt


# Python
:python
	:pip
		install := set
		install += numpy, scipy, matplotlib
# needed for scipy
apt_get.install += gfortran

# F.lux
flux.install = false
[personal && windowed]
	flux.install = true

# ROS
ros.install = false
ros.version = indigo
ros.packages.install := set
[ros.install == true]
	ros.packages.install += robot_localization, moveit_core, ros_control
	apt_get.install += python-catkin-lint
	apt_get.install += python-rosinstall
	apt_get.install += python-wstool


# SSH
ssh.identities := list
ssh.server.enable = false
[ssh.server.enable == true]
	apt_get.install += openssh-server


# UI Settings
uisettings.canonical_scroll = false
uisettings.nonrecursive_search = false
[windowed]
	[personal && system.distributor_id == Ubuntu]
		uisettings.canonical_scroll = true
		uisettings.nonrecursive_search = true
