autocmd BufRead,BufNewFile *.launch setfiletype xml

let mapleader=' '


" tab navigation like firefox
nnoremap <C-p> :bprevious<CR>

nnoremap <C-n> :bnext<CR>
inoremap <C-p> <Esc>:bprevious<CR>i
inoremap <C-n> <Esc>:bnext<CR>i

" Disable Ctrl+B
nnoremap <C-b> <Nop>

set splitbelow
set splitright

set switchbuf="useopen"

if isdirectory('./include')
   set path+=./include
endif
if isdirectory('~/include')
   set path+=~/include
endif
if isdirectory('/usr/include')
   set path+=/usr/include
endif
if isdirectory('/usr/local/include')
   set path+=/usr/local/include
endif
set path+=.,**


let rosworkspace = $ROS_WORKSPACE

if isdirectory(rosworkspace)
   let rospath=rosworkspace . 'src/**'
   set path+=rospath
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vundle Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.bundles/')
" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

"Plugin 'godlygeek/tabular'             " I have yet to use this in practice
Plugin 'vim-utils/vim-troll-stopper'
Plugin 'tpope/vim-fugitive'
"Plugin 'bling/vim-bufferline'
Plugin 'Chiel92/vim-autoformat'
Plugin 'evidens/vim-twig'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'wikitopian/hardmode'
Plugin 'altercation/vim-colors-solarized'
Plugin 'groenewege/vim-less'
Plugin 'plasticboy/vim-markdown'
Plugin 'vim-scripts/DoxygenToolkit.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-abolish'
Plugin 'PeterRincker/vim-argumentative'
Plugin 'airblade/vim-gitgutter'
let g:gitgutter_async = 1
let g:gitgutter_realtime = 0
let g:gitgutter_eager = 0
Plugin 'rhysd/vim-clang-format'
let g:clang_format#command = 'clang-format-3.6'
let g:clang_format#detect_style_file = 1
let g:clang_format#auto_format = 1

Plugin 'nathanaelkane/vim-indent-guides'
set ts=4 sw=4 et
let g:indent_guides_start_level = 1
"let g:indent_guides_guide_size = 1
"let g:indent_guides_auto_colors = 0

Plugin 'easymotion/vim-easymotion'
let g:EasyMotion_leader_key=' m'

Plugin 'alvan/vim-closetag'
let g:closetag_filenames = "*.html,*.xhtml,*.phtml,*.twig,*.launch,*.xml"

Plugin 'majutsushi/tagbar'
nmap <F8> :TagbarToggle<CR>

Plugin 'Valloric/YouCompleteMe'
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
"let g:ycm_collect_identifiers_from_tags_files=1

nnoremap <C-g> :YcmCompleter GoTo<CR>
inoremap <C-g> <Esc>:YcmCompleter GoTo<CR>i
nnoremap <C-f> :YcmCompleter FixIt<CR>
inoremap <C-f> <Esc>:YcmCompleter FixIt<CR>i

"Plugin 'taketwo/vim-ros'
"let g:ycm_semantic_triggers = {
"\   'roslaunch' : ['="', '$(', '/'],
"\   'rosmsg,rossrv,rosaction' : ['re!^', '/'],
"\ }

Plugin 'edkolev/tmuxline.vim'
let g:tmuxline_preset = {
      \'a'    : '#S',
      \'c'    : '#(whoami)',
      \'win'  : ['#I', '#W'],
      \'cwin' : ['#I', '#W', '#F'],
      \'y'    : ['%R', '%a', '%Y'],
      \'z'    : '#H'}

Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
let g:airline_powerline_fonts   = 1
let g:airline_theme             = 'tomorrow'
let g:airline_enable_branch     = 1
let g:airline_enable_syntastic  = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_inactive_collapse = 1
let g:airline#extensions#branch#enabled = 0
"
"Plugin 'tpope/vim-commentary'
"Plugin 'jtratner/vim-flavored-markdown'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Autocommands
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Reread configuration of Vim if .vimrc is saved.
augroup VimRC
  autocmd!
  autocmd BufWritePost .vimrc so ~/.vimrc
augroup END

augroup FileTypeAssociation
   autocmd!
   autocmd BufNewFile,BufRead *.ejs set filetype=html
   autocmd BufNewFile,BufRead *.make set filetype=make
   autocmd BufNewFile,BufRead *.impl set filetype=cpp
   autocmd BufNewFile,BufRead *.inl set filetype=cpp
   autocmd BufNewFile,BufRead *.bzl set filetype=python
   autocmd BufNewFile,BufRead BUILD set filetype=python
   autocmd BufNewFile,BufRead BUILD.* set filetype=python
   autocmd BufNewFile,BufRead *.twig set filetype=html
augroup END

augroup TagBarOpen
   autocmd BufNewFile,BufRead *.cpp :TagbarOpen
augroup END

" Resize splits on window resize.
augroup AutoResizeSplits
   autocmd!
   autocmd VimResized * exe "normal! \<c-w>="
augroup END

autocmd FileType python setlocal foldmethod=indent smartindent shiftwidth=4 ts=4 et cinwords=if,elif,else,for,while,try,except,finally,def,classlk

" automatically start in hard mode. God help me.
"autocmd VimEnter,BufNewFile,BufReadPost * silent! call HardMode()
nnoremap <leader>h <Esc>:call ToggleHardMode()<CR>
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Themes
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable
set background=dark
set t_Co=256                        " force vim to use 256 colors
"let g:solarized_termcolors=256      " use solarized 256 fallback
colorscheme solarized


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Functions
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! <SID>StripTrailingWhitespaces()
   let _s=@/
   let l=line(".")
   let c=col(".")
   %s/\s\+$//e
   let @/=_s
   call cursor(l, c)
endfunction

" strip trailing whitespace.
nnoremap <silent> <leader><Space> :call <SID>StripTrailingWhitespaces()<CR>


function! NumbersOn()
  set relativenumber
  set number
endfunction

function! NumbersOff()
  set nonumber
  set norelativenumber
endfunction

" Toggle relative line numbers
nnoremap <silent> <Leader>N :call NumbersOn()<cr>
nnoremap <silent> <Leader>n :call NumbersOff()<cr>

nnoremap <Leader>s :%s/\<<C-r><C-w>\>/

" Enable :w!! to save a file when you forgot to open with sudo
cmap w!! w !sudo tee % >/dev/null

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Filetype detection
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype on          " Recognize syntax by file extension.
filetype indent on   " Check for indent file.
filetype plugin on   " Allow plugins to be loaded by file type.

" diff mode
if &diff
    set diffopt+=iwhite
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Mappings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Normal mode
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Make y behave like all other capitals (yank to end of line).

nnoremap Y y$

nnoremap <silent> <Leader>J :res +5<CR>
nnoremap <silent> <Leader>K :res -5<CR>
nnoremap <silent> <Leader>L :vertical res +15<CR>
nnoremap <silent> <Leader>H :vertical res -15<CR>
nnoremap <silent> <Leader>j :res +1<CR>
nnoremap <silent> <Leader>k :res -1<CR>
nnoremap <silent> <Leader>l :vertical res +1<CR>
nnoremap <silent> <Leader>h :vertical res -1<CR>

" Use C-hjkl in to change windows.
nnoremap <C-J> :res +1<CR>
nnoremap <C-K> :res -1<CR>
nnoremap <C-L> :vertical res +1<CR>
nnoremap <C-H> :vertical res -1<CR>
nnoremap <C-h> <C-w><Left>
nnoremap <C-j> <C-w><Down>
nnoremap <C-k> <C-w><Up>
nnoremap <C-l> <C-w><Right>

" Toggles for search highlight, line numbers, paste mode, and word wrap.
nnoremap <silent> <Leader>c :TagbarToggle<CR>
"nnoremap <silent> <Leader>h :set invhlsearch<CR>
nnoremap <silent> <Leader>n :set invnumber<CR>
nnoremap <silent> <Leader>p :set invpaste<CR>
nnoremap <silent> <Leader>w :set invwrap<CR>

" Strip trailing whitespace.
nnoremap <silent> <leader><Space> :call <SID>StripTrailingWhitespaces()<CR>

" Toggle NERDTree.
nnoremap <silent> <Leader>t :NERDTreeToggle<CR>

" Insert mode
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Smash Esc.
inoremap kj <Esc>

" hjkl navigation in insert mode.
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>

" Better tabbing
nmap <C-Tab> a<C-t><Esc>
nmap <C-S-Tab> a<C-d><Esc>
imap <C-Tab> <C-t>
imap <C-S-Tab> <C-d>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autoindent                   " Turn on ctrl-t and ctrl-d for indenting
set autowrite                    " Write before executing the 'make' command.
set background=dark              " Usually prefer dark backgrounds.
set backspace=indent,eol,start   " Allow <BS> to go over indents, eol, and start of insert.
set cindent                      " Stricter rules for C files
set colorcolumn=80               " Highlight the 80th column.
set cpoptions+=$                 " Show dollar sign at end of text to be changed.
set cursorline                   " Highlight current line.
set dictionary+=~/.vim/dictionary/english-freq
set encoding=utf-8               " Set encoding to utf-8.
set expandtab                    " Expand tabs with spaces.
set fileencoding=utf-8           " Set fileencoding to utf-8.
set foldcolumn=1                 " Add <n> columns to show fold levels and boundaries.
set foldmethod=indent            " Set fold method (manual,indent,expr,syntax,diff,marker).
set hidden                       " Use hidden buffers so unsaved buffers can go to the background.
set history=500                  " Set number of lines for vim to remember.
set hlsearch                     " Highlight all search matches.
set ignorecase                   " Ignore case in regular expressions.
set incsearch                    " Immediately highlight search matches.
set laststatus=2                 " Show status line even where there is only one window.
set lazyredraw                   " Redraw faster.
set linespace=0                  " Adjust relative line height.
set listchars=tab:>-,trail:.,extends:>,precedes:<
set list                         " Display some whitespace characters.
set mouse-=a
set modeline                     " Check for a modeline.
set nocompatible                 " No compatibility with vi.
set nofoldenable                 " Do not open file folded.
set nowrap                       " Do not open file folded.
set noerrorbells                 " No beeps on errors.
set noswapfile                   " Don't use swap files.
set number                       " Display line numbers.
set relativenumber               " Use relative line numbering
set scrolloff=5                  " Keep min of 'n' lines above/below cursor.
set shellslash                   " Use forward slashes regardless of OS.
set shiftwidth=2                 " >> and << shift 3 spaces.
set showcmd                      " Show partial commands in the status line.
set showmatch                    " Show matching () {} etc..
set showmode                     " Show current mode.
set sidescrolloff=10             " Keep min of 'n' columns right/left cursor.
set smartcase                    " Searches are case-sensitive if caps used.
set smarttab                     " Tabs and backspaces at the start of a line indent the line one level.
set smartindent                  " Maintains most indentation and adds extra level when nesting.
set softtabstop=4                " See spaces as tabs.
set splitright splitbelow        " Open splits below and to the right.
set synmaxcol=2000               " Only matches syntax on first 'n' columns of each line.
set tabstop=4                    " <Tab> move three characters.
set ttyfast                      " Smoother redrawing.
"set textwidth=80                 " Hard wrap at 'n' characters.
set viminfo='20,\"500,%          " Adjust viminfo contents.
"set virtualedit=block            " Allow the cursor to go where it should not.
silent! set wildignorecase       " Tab completion is case-insensitive.
set wildmenu                     " Tab completion navigable menu is enabled.
set wildmode=list:longest,full   " Tab completion lists matches, then opens wildmenu on next <Tab>.
set wrapscan                     " Searching wraps to start of file when end is reached.


highlight LineNr cterm=NONE ctermfg=Grey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
