autocmd BufRead,BufNewFile *.launch setfiletype roslaunch

let mapleader=','

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" tab navigation like firefox
nnoremap <C-p> :bprevious<CR>
nnoremap <C-n> :bnext<CR>
"nnoremap <C-w> :bdelete<CR>
inoremap <C-p> <Esc>:bprevious<CR>i
inoremap <C-n> <Esc>:bnext<CR>i
"inoremap <C-w> <Esc>:bdelete<CR>i

" Disable Ctrl+B
nnoremap <C-b> <Nop>

nnoremap <CR> G

set splitbelow
set splitright

set switchbuf="useopen"

let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
let g:ycm_collect_identifiers_from_tags_files=1

if isdirectory('./include')
   set path+=./include
endif
if isdirectory('~/include')
   set path+=~/include
endif
if isdirectory('/usr/include')
   set path+=/usr/include
endif
if isdirectory('/usr/local/include')
   set path+=/usr/local/include
endif
set path+=.,**


let rosworkspace = $ROS_WORKSPACE

if isdirectory(rosworkspace)
   let rospath=rosworkspace . 'src/**'
   set path+=rospath
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vundle Plugins
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin('~/.bundles/')
" set the runtime path to include Vundle and initialize

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

Plugin 'bling/vim-airline'
let g:airline_powerline_fonts   = 1
let g:airline_theme             = 'powerlineish'
let g:airline_enable_branch     = 1
let g:airline_enable_syntastic  = 1

let g:airline#extensions#tabline#enabled = 1

Plugin 'tpope/vim-fugitive'

Bundle 'Valloric/YouCompleteMe'
nnoremap <C-g> :YcmCompleter GoTo<CR>
inoremap <C-g> <Esc>:YcmCompleter GoTo<CR>i

Plugin 'alvan/vim-closetag'
" filenames like *.xml, *.html, *.xhtml, ...
let g:closetag_filenames = "*.html,*.xhtml,*.phtml"

Plugin 'taketwo/vim-ros'
let g:ycm_semantic_triggers = {
\   'roslaunch' : ['="', '$(', '/'],
\   'rosmsg,rossrv,rosaction' : ['re!^', '/'],
\ }

Plugin 'airblade/vim-gitgutter'

Plugin 'bling/vim-bufferline'

Bundle 'edkolev/tmuxline.vim'
let g:tmuxline_preset = {
      \'a'    : '#S',
      \'c'    : '#(whoami)',
      \'win'  : ['#I', '#W'],
      \'cwin' : ['#I', '#W', '#F'],
      \'y'    : ['%R', '%a', '%Y'],
      \'z'    : '#H'}

Bundle 'scrooloose/nerdtree' 

Bundle 'easymotion/vim-easymotion'

Bundle 'altercation/vim-colors-solarized'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Autocommands
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Reread configuration of Vim if .vimrc is saved.
augroup VimRC
  autocmd!
  autocmd BufWritePost .vimrc so ~/.vimrc
augroup END

augroup FileTypeAssociation
   autocmd!
   autocmd BufNewFile,BufRead *.ejs set filetype=html
   autocmd BufNewFile,BufRead *.make set filetype=make
   autocmd BufNewFile,BufRead *.impl set filetype=cpp
   autocmd BufNewFile,BufRead *.inl set filetype=cpp
augroup END

" Resize splits on window resize.
augroup AutoResizeSplits
   autocmd!
   autocmd VimResized * exe "normal! \<c-w>="
augroup END

if has("autocmd")
  au InsertEnter * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam"
  au InsertLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"
  au VimLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam"
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Themes
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
syntax enable
set t_Co=16
set background=dark
colorscheme solarized

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Functions
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! <SID>StripTrailingWhitespaces()
   let _s=@/
   let l=line(".")
   let c=col(".")
   %s/\s\+$//e
   let @/=_s
   call cursor(l, c)
endfunction

" strip trailing whitespace.
nnoremap <silent> <leader><Space> :call <SID>StripTrailingWhitespaces()<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Filetype detection
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype on          " Recognize syntax by file extension.
filetype indent on   " Check for indent file.
filetype plugin on   " Allow plugins to be loaded by file type.



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Settings
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set autowrite                    " Write before executing the 'make' command.
set background=dark              " Usually prefer dark backgrounds.
set backspace=indent,eol,start   " Allow <BS> to go over indents, eol, and start of insert.
set colorcolumn=80               " Highlight the 80th column.
set cpoptions+=$                 " Show dollar sign at end of text to be changed.
set cursorline                   " Highlight current line.
set dictionary+=~/.vim/dictionary/english-freq
set encoding=utf-8               " Set encoding to utf-8.
set expandtab                    " Expand tabs with spaces.
set fileencoding=utf-8           " Set fileencoding to utf-8.
set foldcolumn=1                 " Add <n> columns to show fold levels and boundaries.
set foldmethod=indent            " Set fold method (manual,indent,expr,syntax,diff,marker).
set hidden                       " Use hidden buffers so unsaved buffers can go to the background.
set history=500                  " Set number of lines for vim to remember.
set hlsearch                     " Highlight all search matches.
set ignorecase                   " Ignore case in regular expressions.
set incsearch                    " Immediately highlight search matches.
set laststatus=2                 " Show status line even where there is only one window.
set lazyredraw                   " Redraw faster.
set linespace=0                  " Adjust relative line height.
set mouse=a
set modeline                     " Check for a modeline.
set nocompatible                 " No compatibility with vi.
set nofoldenable                 " Do not open file folded.
set nowrap                       " Do not open file folded.
set noerrorbells                 " No beeps on errors.
set noswapfile                   " Don't use swap files.
set number                       " Display line numbers.
set relativenumber               " Use relative line numbering
set scrolloff=5                  " Keep min of 'n' lines above/below cursor.
set shellslash                   " Use forward slashes regardless of OS.
set shiftwidth=2                 " >> and << shift 3 spaces.
set showcmd                      " Show partial commands in the status line.
set showmatch                    " Show matching () {} etc..
set showmode                     " Show current mode.
set sidescrolloff=10             " Keep min of 'n' columns right/left cursor.
set smartcase                    " Searches are case-sensitive if caps used.
set smarttab                     " Tabs and backspaces at the start of a line indent the line one level.
set smartindent                  " Maintains most indentation and adds extra level when nesting.
set softtabstop=2                " See spaces as tabs.
set splitright splitbelow        " Open splits below and to the right.
set synmaxcol=2000               " Only matches syntax on first 'n' columns of each line.
set tabstop=2                    " <Tab> move three characters.
set ttyfast                      " Smoother redrawing.
"set textwidth=80                 " Hard wrap at 'n' characters.
set viminfo='20,\"500,%          " Adjust viminfo contents.
"set virtualedit=block            " Allow the cursor to go where it should not.
silent! set wildignorecase       " Tab completion is case-insensitive.
set wildmenu                     " Tab completion navigable menu is enabled.
set wildmode=list:longest,full   " Tab completion lists matches, then opens wildmenu on next <Tab>.
set wrapscan                     " Searching wraps to start of file when end is reached.

highlight LineNr cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE
